use crate::data::*;

impl Style {
	pub fn render_css_syntax(&self) -> String {
		match self {
			Style::Typed(Rule{property, value}) => {
				let property = property.render_css_syntax();
				let value = value.render_css_syntax();
				format!("{prop}: {value}", prop=property, value=value)
			}
			Style::Untyped(Untyped{property, value}) => format!(
				"{prop}: {value}",
				prop=property,
				value=value,
			),
		}
	}	
}

impl Property {
	pub fn render_css_syntax(&self) -> &str {
		match self {
			Property::AlignContent => "align-content",
			Property::AlignItems => "align-items",
			Property::AlignSelf => "align-self",
			Property::All => "all",
			Property::Animation => "animation",
			Property::AnimationDelay => "animation-delay",
			Property::AnimationDirection => "animation-direction",
			Property::AnimationDuration => "animation-duration",
			Property::AnimationFillMode => "animation-fill-mode",
			Property::AnimationIterationCount => "animation-iteration-count",
			Property::AnimationName => "animation-name",
			Property::AnimationPlayState => "animation-play-state",
			Property::AnimationTimingFunction => "animation-timing-function",
			Property::Azimuth => "azimuth",
			Property::Background => "background",
			Property::BackgroundAttachment => "background-attachment",
			Property::BackgroundBlendMode => "background-blend-mode",
			Property::BackgroundClip => "background-clip",
			Property::BackgroundColor => "background-color",
			Property::BackgroundImage => "background-image",
			Property::BackgroundOrigin => "background-origin",
			Property::BackgroundPosition => "background-position",
			Property::BackgroundRepeat => "background-repeat",
			Property::BackgroundSize => "background-size",
			Property::Border => "border",
			Property::BorderBottom => "border-bottom",
			Property::BorderBottomColor => "border-bottom-color",
			Property::BorderBottomLeftRadius => "border-bottom-left-radius",
			Property::BorderBottomRightRadius => "border-bottom-right-radius",
			Property::BorderBottomStyle => "border-bottom-style",
			Property::BorderBottomWidth => "border-bottom-width",
			Property::BorderCollapse => "border-collapse",
			Property::BorderColor => "border-color",
			Property::BorderImage => "border-image",
			Property::BorderImageOutset => "border-image-outset",
			Property::BorderImageRepeat => "border-image-repeat",
			Property::BorderImageSlice => "border-image-slice",
			Property::BorderImageSource => "border-image-source",
			Property::BorderImageWidth => "border-image-width",
			Property::BorderLeft => "border-left",
			Property::BorderLeftColor => "border-left-color",
			Property::BorderLeftStyle => "border-left-style",
			Property::BorderLeftWidth => "border-left-width",
			Property::BorderRadius => "border-radius",
			Property::BorderRight => "border-right",
			Property::BorderRightColor => "border-right-color",
			Property::BorderRightStyle => "border-right-style",
			Property::BorderRightWidth => "border-right-width",
			Property::BorderSpacing => "border-spacing",
			Property::BorderStyle => "border-style",
			Property::BorderTop => "border-top",
			Property::BorderTopColor => "border-top-color",
			Property::BorderTopLeftRadius => "border-top-left-radius",
			Property::BorderTopRightRadius => "border-top-right-radius",
			Property::BorderTopStyle => "border-top-style",
			Property::BorderTopWidth => "border-top-width",
			Property::BorderWidth => "border-width",
			Property::Bottom => "bottom",
			Property::BoxDecorationBreak => "box-decoration-break",
			Property::BoxShadow => "box-shadow",
			Property::BoxSizing => "box-sizing",
			Property::BreakAfter => "break-after",
			Property::BreakBefore => "break-before",
			Property::BreakInside => "break-inside",
			Property::CaptionSide => "caption-side",
			Property::CaretColor => "caret-color",
			Property::Clear => "clear",
			Property::Clip => "clip",
			Property::ClipPath => "clip-path",
			Property::ClipRule => "clip-rule",
			Property::Color => "color",
			Property::ColorInterpolationFilters => "color-interpolation-filters",
			Property::ColumnCount => "column-count",
			Property::ColumnFill => "column-fill",
			Property::ColumnGap => "column-gap",
			Property::ColumnRule => "column-rule",
			Property::ColumnRuleColor => "column-rule-color",
			Property::ColumnRuleStyle => "column-rule-style",
			Property::ColumnRuleWidth => "column-rule-width",
			Property::Columns => "columns",
			Property::ColumnSpan => "column-span",
			Property::ColumnWidth => "column-width",
			Property::Contain => "contain",
			Property::Content => "content",
			Property::CounterIncrement => "counter-increment",
			Property::CounterReset => "counter-reset",
			Property::Cue => "cue",
			Property::CueAfter => "cue-after",
			Property::CueBefore => "cue-before",
			Property::Cursor => "cursor",
			Property::Direction => "direction",
			Property::Display => "display",
			Property::Elevation => "elevation",
			Property::EmptyCells => "empty-cells",
			Property::Filter => "filter",
			Property::Flex => "flex",
			Property::FlexBasis => "flex-basis",
			Property::FlexDirection => "flex-direction",
			Property::FlexFlow => "flex-flow",
			Property::FlexGrow => "flex-grow",
			Property::FlexShrink => "flex-shrink",
			Property::FlexWrap => "flex-wrap",
			Property::Float => "float",
			Property::FloodColor => "flood-color",
			Property::FloodOpacity => "flood-opacity",
			Property::Font => "font",
			Property::FontFamily => "font-family",
			Property::FontFeatureSettings => "font-feature-settings",
			Property::FontKerning => "font-kerning",
			Property::FontSize => "font-size",
			Property::FontSizeAdjust => "font-size-adjust",
			Property::FontStretch => "font-stretch",
			Property::FontStyle => "font-style",
			Property::FontSynthesis => "font-synthesis",
			Property::FontVariant => "font-variant",
			Property::FontVariantCaps => "font-variant-caps",
			Property::FontVariantEastAsian => "font-variant-east-asian",
			Property::FontVariantLigatures => "font-variant-ligatures",
			Property::FontVariantNumeric => "font-variant-numeric",
			Property::FontVariantPosition => "font-variant-position",
			Property::FontWeight => "font-weight",
			Property::Gap => "gap",
			Property::Globalcompositeoperation => "globalcompositeoperation",
			Property::GlyphOrientationVertical => "glyph-orientation-vertical",
			Property::Grid => "grid",
			Property::GridArea => "grid-area",
			Property::GridAutoColumns => "grid-auto-columns",
			Property::GridAutoFlow => "grid-auto-flow",
			Property::GridAutoRows => "grid-auto-rows",
			Property::GridColumn => "grid-column",
			Property::GridColumnEnd => "grid-column-end",
			Property::GridColumnGap => "grid-column-gap",
			Property::GridColumnStart => "grid-column-start",
			Property::GridGap => "grid-gap",
			Property::GridRow => "grid-row",
			Property::GridRowEnd => "grid-row-end",
			Property::GridRowGap => "grid-row-gap",
			Property::GridRowStart => "grid-row-start",
			Property::GridTemplate => "grid-template",
			Property::GridTemplateAreas => "grid-template-areas",
			Property::GridTemplateColumns => "grid-template-columns",
			Property::GridTemplateRows => "grid-template-rows",
			Property::HangingPunctuation => "hanging-punctuation",
			Property::Height => "height",
			Property::Hyphens => "hyphens",
			Property::ImageOrientation => "image-orientation",
			Property::ImageRendering => "image-rendering",
			Property::ImageResolution => "image-resolution",
			Property::Isolation => "isolation",
			Property::JustifyContent => "justify-content",
			Property::JustifyItems => "justify-items",
			Property::JustifySelf => "justify-self",
			Property::Left => "left",
			Property::LetterSpacing => "letter-spacing",
			Property::LightingColor => "lighting-color",
			Property::LineBreak => "line-break",
			Property::LineHeight => "line-height",
			Property::ListStyle => "list-style",
			Property::ListStyleImage => "list-style-image",
			Property::ListStylePosition => "list-style-position",
			Property::ListStyleType => "list-style-type",
			Property::Margin => "margin",
			Property::MarginBottom => "margin-bottom",
			Property::MarginLeft => "margin-left",
			Property::MarginRight => "margin-right",
			Property::MarginTop => "margin-top",
			Property::Mask => "mask",
			Property::MaskBorder => "mask-border",
			Property::MaskBorderMode => "mask-border-mode",
			Property::MaskBorderOutset => "mask-border-outset",
			Property::MaskBorderRepeat => "mask-border-repeat",
			Property::MaskBorderSlice => "mask-border-slice",
			Property::MaskBorderSource => "mask-border-source",
			Property::MaskBorderWidth => "mask-border-width",
			Property::MaskClip => "mask-clip",
			Property::MaskComposite => "mask-composite",
			Property::MaskImage => "mask-image",
			Property::MaskMode => "mask-mode",
			Property::MaskOrigin => "mask-origin",
			Property::MaskPosition => "mask-position",
			Property::MaskRepeat => "mask-repeat",
			Property::MaskSize => "mask-size",
			Property::MaskType => "mask-type",
			Property::MaxHeight => "max-height",
			Property::MaxWidth => "max-width",
			Property::MinHeight => "min-height",
			Property::MinWidth => "min-width",
			Property::MixBlendMode => "mix-blend-mode",
			Property::ObjectFit => "object-fit",
			Property::ObjectPosition => "object-position",
			Property::Opacity => "opacity",
			Property::Order => "order",
			Property::Orphans => "orphans",
			Property::Outline => "outline",
			Property::OutlineColor => "outline-color",
			Property::OutlineOffset => "outline-offset",
			Property::OutlineStyle => "outline-style",
			Property::OutlineWidth => "outline-width",
			Property::Overflow => "overflow",
			Property::OverflowWrap => "overflow-wrap",
			Property::Padding => "padding",
			Property::PaddingBottom => "padding-bottom",
			Property::PaddingLeft => "padding-left",
			Property::PaddingRight => "padding-right",
			Property::PaddingTop => "padding-top",
			Property::PageBreakAfter => "page-break-after",
			Property::PageBreakBefore => "page-break-before",
			Property::PageBreakInside => "page-break-inside",
			Property::Pause => "pause",
			Property::PauseAfter => "pause-after",
			Property::PauseBefore => "pause-before",
			Property::Pitch => "pitch",
			Property::PitchRange => "pitch-range",
			Property::PlaceContent => "place-content",
			Property::PlaceItems => "place-items",
			Property::PlaceSelf => "place-self",
			Property::PlayDuring => "play-during",
			Property::Position => "position",
			Property::Quotes => "quotes",
			Property::Resize => "resize",
			Property::Rest => "rest",
			Property::RestAfter => "rest-after",
			Property::RestBefore => "rest-before",
			Property::Richness => "richness",
			Property::Right => "right",
			Property::RowGap => "row-gap",
			Property::ScrollMargin => "scroll-margin",
			Property::ScrollMarginBlock => "scroll-margin-block",
			Property::ScrollMarginBlockEnd => "scroll-margin-block-end",
			Property::ScrollMarginBlockStart => "scroll-margin-block-start",
			Property::ScrollMarginBottom => "scroll-margin-bottom",
			Property::ScrollMarginInline => "scroll-margin-inline",
			Property::ScrollMarginInlineEnd => "scroll-margin-inline-end",
			Property::ScrollMarginInlineStart => "scroll-margin-inline-start",
			Property::ScrollMarginLeft => "scroll-margin-left",
			Property::ScrollMarginRight => "scroll-margin-right",
			Property::ScrollMarginTop => "scroll-margin-top",
			Property::ScrollPadding => "scroll-padding",
			Property::ScrollPaddingBlock => "scroll-padding-block",
			Property::ScrollPaddingBlockEnd => "scroll-padding-block-end",
			Property::ScrollPaddingBlockStart => "scroll-padding-block-start",
			Property::ScrollPaddingBottom => "scroll-padding-bottom",
			Property::ScrollPaddingInline => "scroll-padding-inline",
			Property::ScrollPaddingInlineEnd => "scroll-padding-inline-end",
			Property::ScrollPaddingInlineStart => "scroll-padding-inline-start",
			Property::ScrollPaddingLeft => "scroll-padding-left",
			Property::ScrollPaddingRight => "scroll-padding-right",
			Property::ScrollPaddingTop => "scroll-padding-top",
			Property::ScrollSnapAlign => "scroll-snap-align",
			Property::ScrollSnapStop => "scroll-snap-stop",
			Property::ScrollSnapType => "scroll-snap-type",
			Property::ShapeImageThreshold => "shape-image-threshold",
			Property::ShapeMargin => "shape-margin",
			Property::ShapeOutside => "shape-outside",
			Property::Speak => "speak",
			Property::SpeakAs => "speak-as",
			Property::SpeakHeader => "speak-header",
			Property::SpeakNumeral => "speak-numeral",
			Property::SpeakPunctuation => "speak-punctuation",
			Property::SpeechRate => "speech-rate",
			Property::Stress => "stress",
			Property::TableLayout => "table-layout",
			Property::TabSize => "tab-size",
			Property::TextAlign => "text-align",
			Property::TextAlignAll => "text-align-all",
			Property::TextAlignLast => "text-align-last",
			Property::TextCombineUpright => "text-combine-upright",
			Property::TextDecoration => "text-decoration",
			Property::TextDecorationColor => "text-decoration-color",
			Property::TextDecorationLine => "text-decoration-line",
			Property::TextDecorationStyle => "text-decoration-style",
			Property::TextEmphasis => "text-emphasis",
			Property::TextEmphasisColor => "text-emphasis-color",
			Property::TextEmphasisPosition => "text-emphasis-position",
			Property::TextEmphasisStyle => "text-emphasis-style",
			Property::TextIndent => "text-indent",
			Property::TextJustify => "text-justify",
			Property::TextOrientation => "text-orientation",
			Property::TextOverflow => "text-overflow",
			Property::TextShadow => "text-shadow",
			Property::TextTransform => "text-transform",
			Property::TextUnderlinePosition => "text-underline-position",
			Property::Top => "top",
			Property::Transform => "transform",
			Property::TransformBox => "transform-box",
			Property::TransformOrigin => "transform-origin",
			Property::Transition => "transition",
			Property::TransitionDelay => "transition-delay",
			Property::TransitionDuration => "transition-duration",
			Property::TransitionProperty => "transition-property",
			Property::TransitionTimingFunction => "transition-timing-function",
			Property::UnicodeBidi => "unicode-bidi",
			Property::VerticalAlign => "vertical-align",
			Property::Visibility => "visibility",
			Property::VoiceBalance => "voice-balance",
			Property::VoiceDuration => "voice-duration",
			Property::VoiceFamily => "voice-family",
			Property::VoicePitch => "voice-pitch",
			Property::VoiceRange => "voice-range",
			Property::VoiceRate => "voice-rate",
			Property::VoiceStress => "voice-stress",
			Property::VoiceVolume => "voice-volume",
			Property::Volume => "volume",
			Property::WhiteSpace => "white-space",
			Property::Widows => "widows",
			Property::Width => "width",
			Property::WillChange => "will-change",
			Property::WordBreak => "word-break",
			Property::WordSpacing => "word-spacing",
			Property::WordWrap => "word-wrap",
			Property::WritingMode => "writing-mode",
			Property::ZIndex => "z-index",
		}
	}
}

impl Value {
	pub fn render_css_syntax(&self) -> String {
		match self {
			Value::Length(x) => x.render_css_syntax(),
			Value::Length2(x1, x2) => format!(
				"{} {}",
				x1.render_css_syntax(),
				x2.render_css_syntax(),
			),
			Value::Length3(x1, x2, x3) => format!(
				"{} {} {}",
				x1.render_css_syntax(),
				x2.render_css_syntax(),
				x3.render_css_syntax(),
			),
			Value::Length4(x1, x2, x3, x4) => format!(
				"{} {} {} {}",
				x1.render_css_syntax(),
				x2.render_css_syntax(),
				x3.render_css_syntax(),
				x4.render_css_syntax(),
			),
			Value::RunIn => String::from("run-in"),
			Value::Flow => String::from("flow"),
			Value::FlowRoot => String::from("flow-root"),
			Value::Inline => String::from("inline"),
			Value::Add => String::from("add"),
			Value::Additive => String::from("additive"),
			Value::Alias => String::from("alias"),
			Value::All => String::from("all"),
			Value::AllowEnd => String::from("allow-end"),
			Value::AllScroll => String::from("all-scroll"),
			Value::Alpha => String::from("alpha"),
			Value::Alphabetic => String::from("alphabetic"),
			Value::Alternate => String::from("alternate"),
			Value::AlternateReverse => String::from("alternate-reverse"),
			Value::Always => String::from("always"),
			Value::Anywhere => String::from("anywhere"),
			Value::ArabicIndic => String::from("arabic-indic"),
			Value::Arithmetic => String::from("arithmetic"),
			Value::Armenian => String::from("armenian"),
			Value::Atop => String::from("atop"),
			Value::Aural => String::from("aural"),
			Value::Auto => String::from("auto"),
			Value::AutoFill => String::from("auto-fill"),
			Value::AutoFit => String::from("auto-fit"),
			Value::Avoid => String::from("avoid"),
			Value::AvoidColumn => String::from("avoid-column"),
			Value::AvoidPage => String::from("avoid-page"),
			Value::AvoidRegion => String::from("avoid-region"),
			Value::Backgroundalpha => String::from("backgroundalpha"),
			Value::Backgroundimage => String::from("backgroundimage"),
			Value::Backwards => String::from("backwards"),
			Value::Balance => String::from("balance"),
			Value::BalanceAll => String::from("balance-all"),
			Value::Baseline => String::from("baseline"),
			Value::Bengali => String::from("bengali"),
			Value::BidiOverride => String::from("bidi-override"),
			Value::Blink => String::from("blink"),
			Value::Block => String::from("block"),
			Value::BorderBox => String::from("border-box"),
			Value::Both => String::from("both"),
			Value::Bottom => String::from("bottom"),
			Value::Braille => String::from("braille"),
			Value::BreakAll => String::from("break-all"),
			Value::BreakSpaces => String::from("break-spaces"),
			Value::BreakWord => String::from("break-word"),
			Value::Bullets => String::from("bullets"),
			Value::Cambodian => String::from("cambodian"),
			Value::Capitalize => String::from("capitalize"),
			Value::Cell => String::from("cell"),
			Value::Center => String::from("center"),
			Value::Ch => String::from("ch"),
			Value::Circle => String::from("circle"),
			Value::CjkDecimal => String::from("cjk-decimal"),
			Value::CjkEarthlyBranch => String::from("cjk-earthly-branch"),
			Value::CjkHeavenlyStem => String::from("cjk-heavenly-stem"),
			Value::CjkIdeographic => String::from("cjk-ideographic"),
			Value::Clip => String::from("clip"),
			Value::Clone => String::from("clone"),
			Value::CloseQuote => String::from("close-quote"),
			Value::ClosestCorner => String::from("closest-corner"),
			Value::ClosestSide => String::from("closest-side"),
			Value::Coarse => String::from("coarse"),
			Value::Color => String::from("color"),
			Value::ColorBurn => String::from("color-burn"),
			Value::ColorDodge => String::from("color-dodge"),
			Value::ColResize => String::from("col-resize"),
			Value::Column => String::from("column"),
			Value::ColumnReverse => String::from("column-reverse"),
			Value::Contain => String::from("contain"),
			Value::Content => String::from("content"),
			Value::ContentBox => String::from("content-box"),
			Value::Contents => String::from("contents"),
			Value::ContextMenu => String::from("context-menu"),
			Value::Copy => String::from("copy"),
			Value::Cover => String::from("cover"),
			Value::CrispEdges => String::from("crisp-edges"),
			Value::Crosshair => String::from("crosshair"),
			Value::Currentcolor => String::from("currentcolor"),
			Value::Cyclic => String::from("cyclic"),
			Value::Darken => String::from("darken"),
			Value::Dashed => String::from("dashed"),
			Value::Decimal => String::from("decimal"),
			Value::DecimalLeadingZero => String::from("decimal-leading-zero"),
			Value::Default => String::from("default"),
			Value::Deg => String::from("deg"),
			Value::Dense => String::from("dense"),
			Value::Devanagari => String::from("devanagari"),
			Value::Difference => String::from("difference"),
			Value::Disc => String::from("disc"),
			Value::DisclosureClosed => String::from("disclosure-closed"),
			Value::DisclosureOpen => String::from("disclosure-open"),
			Value::Discrete => String::from("discrete"),
			Value::Distribute => String::from("distribute"),
			Value::Dot => String::from("dot"),
			Value::Dotted => String::from("dotted"),
			Value::Double => String::from("double"),
			Value::DoubleCircle => String::from("double-circle"),
			Value::Dpcm => String::from("dpcm"),
			Value::Dpi => String::from("dpi"),
			Value::Dppx => String::from("dppx"),
			Value::Duplicate => String::from("duplicate"),
			Value::EachLine => String::from("each-line"),
			Value::Ease => String::from("ease"),
			Value::EaseIn => String::from("ease-in"),
			Value::EaseInOut => String::from("ease-in-out"),
			Value::EaseOut => String::from("ease-out"),
			Value::Ellipse => String::from("ellipse"),
			Value::Ellipsis => String::from("ellipsis"),
			Value::Embed => String::from("embed"),
			Value::Embossed => String::from("embossed"),
			Value::End => String::from("end"),
			Value::EResize => String::from("e-resize"),
			Value::EthiopicNumeric => String::from("ethiopic-numeric"),
			Value::Evenodd => String::from("evenodd"),
			Value::EwResize => String::from("ew-resize"),
			Value::Ex => String::from("ex"),
			Value::Exclude => String::from("exclude"),
			Value::Exclusion => String::from("exclusion"),
			Value::Extends => String::from("extends"),
			Value::FarthestCorner => String::from("farthest-corner"),
			Value::FarthestSide => String::from("farthest-side"),
			Value::Fast => String::from("fast"),
			Value::Fill => String::from("fill"),
			Value::FillBox => String::from("fill-box"),
			Value::Filled => String::from("filled"),
			Value::Fillpaint => String::from("fillpaint"),
			Value::Fine => String::from("fine"),
			Value::First => String::from("first"),
			Value::FitContent => String::from("fit-content"),
			Value::Fixed => String::from("fixed"),
			Value::Flex => String::from("flex"),
			Value::FlexEnd => String::from("flex-end"),
			Value::FlexStart => String::from("flex-start"),
			Value::FontFeatureSettings => String::from("font-feature-settings"),
			Value::FontVariant => String::from("font-variant"),
			Value::ForceEnd => String::from("force-end"),
			Value::Forwards => String::from("forwards"),
			Value::Fr => String::from("fr"),
			Value::FromImage => String::from("from-image"),
			Value::FullSizeKana => String::from("full-size-kana"),
			Value::FullWidth => String::from("full-width"),
			Value::Gamma => String::from("gamma"),
			Value::Georgian => String::from("georgian"),
			Value::Grab => String::from("grab"),
			Value::Grabbing => String::from("grabbing"),
			Value::Grad => String::from("grad"),
			Value::Grid => String::from("grid"),
			Value::Groove => String::from("groove"),
			Value::Gujarati => String::from("gujarati"),
			Value::Gurmukhi => String::from("gurmukhi"),
			Value::Handheld => String::from("handheld"),
			Value::Hanging => String::from("hanging"),
			Value::HardLight => String::from("hard-light"),
			Value::Hebrew => String::from("hebrew"),
			Value::Help => String::from("help"),
			Value::Hidden => String::from("hidden"),
			Value::HighQuality => String::from("high-quality"),
			Value::Hiragana => String::from("hiragana"),
			Value::HiraganaIroha => String::from("hiragana-iroha"),
			Value::HorizontalTb => String::from("horizontal-tb"),
			Value::Hover => String::from("hover"),
			Value::Hue => String::from("hue"),
			Value::Hz => String::from("hz"),
			Value::Identity => String::from("identity"),
			Value::InterCharacter => String::from("inter-character"),
			Value::Interlace => String::from("interlace"),
			Value::Intersect => String::from("intersect"),
			Value::InterWord => String::from("inter-word"),
			Value::Invert => String::from("invert"),
			Value::Isolate => String::from("isolate"),
			Value::IsolateOverride => String::from("isolate-override"),
			Value::JapaneseFormal => String::from("japanese-formal"),
			Value::JapaneseInformal => String::from("japanese-informal"),
			Value::JumpBoth => String::from("jump-both"),
			Value::JumpEnd => String::from("jump-end"),
			Value::JumpNone => String::from("jump-none"),
			Value::JumpStart => String::from("jump-start"),
			Value::Justify => String::from("justify"),
			Value::JustifyAll => String::from("justify-all"),
			Value::Kannada => String::from("kannada"),
			Value::Katakana => String::from("katakana"),
			Value::KatakanaIroha => String::from("katakana-iroha"),
			Value::KeepAll => String::from("keep-all"),
			Value::Khmer => String::from("khmer"),
			Value::Khz => String::from("khz"),
			Value::KoreanHangulFormal => String::from("korean-hangul-formal"),
			Value::KoreanHanjaFormal => String::from("korean-hanja-formal"),
			Value::KoreanHanjaInformal => String::from("korean-hanja-informal"),
			Value::Landscape => String::from("landscape"),
			Value::Lao => String::from("lao"),
			Value::Last => String::from("last"),
			Value::Layout => String::from("layout"),
			Value::Left => String::from("left"),
			Value::Legacy => String::from("legacy"),
			Value::Lighten => String::from("lighten"),
			Value::Linear => String::from("linear"),
			Value::Linearrgb => String::from("linearrgb"),
			Value::LineThrough => String::from("line-through"),
			Value::ListItem => String::from("list-item"),
			Value::Local => String::from("local"),
			Value::Loose => String::from("loose"),
			Value::LowerAlpha => String::from("lower-alpha"),
			Value::LowerArmenian => String::from("lower-armenian"),
			Value::Lowercase => String::from("lowercase"),
			Value::LowerGreek => String::from("lower-greek"),
			Value::LowerLatin => String::from("lower-latin"),
			Value::LowerRoman => String::from("lower-roman"),
			Value::Ltr => String::from("ltr"),
			Value::Luminance => String::from("luminance"),
			Value::Luminosity => String::from("luminosity"),
			Value::Malayalam => String::from("malayalam"),
			Value::Mandatory => String::from("mandatory"),
			Value::Manual => String::from("manual"),
			Value::MarginBox => String::from("margin-box"),
			Value::MatchParent => String::from("match-parent"),
			Value::MatchSource => String::from("match-source"),
			Value::MaxContent => String::from("max-content"),
			Value::Medium => String::from("medium"),
			Value::MinContent => String::from("min-content"),
			Value::Minmax => String::from("minmax"),
			Value::Mixed => String::from("mixed"),
			Value::Mm => String::from("mm"),
			Value::Mongolian => String::from("mongolian"),
			Value::Move => String::from("move"),
			Value::Ms => String::from("ms"),
			Value::Multiply => String::from("multiply"),
			Value::Myanmar => String::from("myanmar"),
			Value::NeResize => String::from("ne-resize"),
			Value::NeswResize => String::from("nesw-resize"),
			Value::NoClip => String::from("no-clip"),
			Value::NoCloseQuote => String::from("no-close-quote"),
			Value::NoComposite => String::from("no-composite"),
			Value::NoDrop => String::from("no-drop"),
			Value::None => String::from("none"),
			Value::Nonzero => String::from("nonzero"),
			Value::NoOpenQuote => String::from("no-open-quote"),
			Value::NoRepeat => String::from("no-repeat"),
			Value::Normal => String::from("normal"),
			Value::Not => String::from("not"),
			Value::NotAllowed => String::from("not-allowed"),
			Value::Nowrap => String::from("nowrap"),
			Value::NResize => String::from("n-resize"),
			Value::NsResize => String::from("ns-resize"),
			Value::Numbers => String::from("numbers"),
			Value::Numeric => String::from("numeric"),
			Value::NwResize => String::from("nw-resize"),
			Value::NwseResize => String::from("nwse-resize"),
			Value::Objectboundingbox => String::from("objectboundingbox"),
			Value::Only => String::from("only"),
			Value::Open => String::from("open"),
			Value::OpenQuote => String::from("open-quote"),
			Value::OptionalPaged => String::from("optional-paged"),
			Value::Oriya => String::from("oriya"),
			Value::Outset => String::from("outset"),
			Value::Over => String::from("over"),
			Value::Overlay => String::from("overlay"),
			Value::Overline => String::from("overline"),
			Value::P3 => String::from("p3"),
			Value::PaddingBox => String::from("padding-box"),
			Value::Page => String::from("page"),
			Value::Paged => String::from("paged"),
			Value::Paint => String::from("paint"),
			Value::Paused => String::from("paused"),
			Value::Pc => String::from("pc"),
			Value::Persian => String::from("persian"),
			Value::Pixelated => String::from("pixelated"),
			Value::Pixel => String::from("pixel"),
			Value::Plaintext => String::from("plaintext"),
			Value::Pointer => String::from("pointer"),
			Value::Portrait => String::from("portrait"),
			Value::Pre => String::from("pre"),
			Value::PreLine => String::from("pre-line"),
			Value::PreWrap => String::from("pre-wrap"),
			Value::Print => String::from("print"),
			Value::Progress => String::from("progress"),
			Value::Progressive => String::from("progressive"),
			Value::Projection => String::from("projection"),
			Value::Proximity => String::from("proximity"),
			Value::Rec2020 => String::from("rec2020"),
			Value::Recto => String::from("recto"),
			Value::Region => String::from("region"),
			Value::Repeat => String::from("repeat"),
			Value::RepeatX => String::from("repeat-x"),
			Value::RepeatY => String::from("repeat-y"),
			Value::Reverse => String::from("reverse"),
			Value::Revert => String::from("revert"),
			Value::Ridge => String::from("ridge"),
			Value::Right => String::from("right"),
			Value::Rotate => String::from("rotate"),
			Value::Round => String::from("round"),
			Value::Row => String::from("row"),
			Value::RowResize => String::from("row-resize"),
			Value::RowReverse => String::from("row-reverse"),
			Value::Rtl => String::from("rtl"),
			Value::Running => String::from("running"),
			Value::S => String::from("s"),
			Value::Safe => String::from("safe"),
			Value::Saturation => String::from("saturation"),
			Value::Scale => String::from("scale"),
			Value::ScaleDown => String::from("scale-down"),
			Value::Scalex => String::from("scalex"),
			Value::Scaley => String::from("scaley"),
			Value::Screen => String::from("screen"),
			Value::Scroll => String::from("scroll"),
			Value::ScrollPosition => String::from("scroll-position"),
			Value::SelfEnd => String::from("self-end"),
			Value::SelfStart => String::from("self-start"),
			Value::SeResize => String::from("se-resize"),
			Value::Sesame => String::from("sesame"),
			Value::Sideways => String::from("sideways"),
			Value::SidewaysRight => String::from("sideways-right"),
			Value::SimpChineseFormal => String::from("simp-chinese-formal"),
			Value::SimpChineseInformal => String::from("simp-chinese-informal"),
			Value::Size => String::from("size"),
			Value::Skew => String::from("skew"),
			Value::Skewx => String::from("skewx"),
			Value::Skewy => String::from("skewy"),
			Value::Slice => String::from("slice"),
			Value::Slow => String::from("slow"),
			Value::Smooth => String::from("smooth"),
			Value::SoftLight => String::from("soft-light"),
			Value::Solid => String::from("solid"),
			Value::Sourcealpha => String::from("sourcealpha"),
			Value::Sourcegraphic => String::from("sourcegraphic"),
			Value::Space => String::from("space"),
			Value::SpaceAround => String::from("space-around"),
			Value::SpaceBetween => String::from("space-between"),
			Value::SpaceEvenly => String::from("space-evenly"),
			Value::Speech => String::from("speech"),
			Value::SpellOut => String::from("spell-out"),
			Value::Square => String::from("square"),
			Value::SResize => String::from("s-resize"),
			Value::Srgb => String::from("srgb"),
			Value::Start => String::from("start"),
			Value::StepEnd => String::from("step-end"),
			Value::StepStart => String::from("step-start"),
			Value::Stretch => String::from("stretch"),
			Value::Strict => String::from("strict"),
			Value::StrokeBox => String::from("stroke-box"),
			Value::Strokepaint => String::from("strokepaint"),
			Value::Style => String::from("style"),
			Value::Subtract => String::from("subtract"),
			Value::SwResize => String::from("sw-resize"),
			Value::Symbolic => String::from("symbolic"),
			Value::Table => String::from("table"),
			Value::TableCaption => String::from("table-caption"),
			Value::TableCell => String::from("table-cell"),
			Value::TableColumn => String::from("table-column"),
			Value::TableColumnGroup => String::from("table-column-group"),
			Value::TableFooterGroup => String::from("table-footer-group"),
			Value::TableHeaderGroup => String::from("table-header-group"),
			Value::TableRow => String::from("table-row"),
			Value::TableRowGroup => String::from("table-row-group"),
			Value::Tamil => String::from("tamil"),
			Value::Telugu => String::from("telugu"),
			Value::Text => String::from("text"),
			Value::Thai => String::from("thai"),
			Value::Thick => String::from("thick"),
			Value::Thin => String::from("thin"),
			Value::Tibetan => String::from("tibetan"),
			Value::Top => String::from("top"),
			Value::TradChineseFormal => String::from("trad-chinese-formal"),
			Value::TradChineseInformal => String::from("trad-chinese-informal"),
			Value::Translate => String::from("translate"),
			Value::Translatex => String::from("translatex"),
			Value::Translatey => String::from("translatey"),
			Value::Triangle => String::from("triangle"),
			Value::Tty => String::from("tty"),
			Value::Turn => String::from("turn"),
			Value::Tv => String::from("tv"),
			Value::Under => String::from("under"),
			Value::Underline => String::from("underline"),
			Value::Unsafe => String::from("unsafe"),
			Value::Unset => String::from("unset"),
			Value::UpperAlpha => String::from("upper-alpha"),
			Value::UpperArmenian => String::from("upper-armenian"),
			Value::Uppercase => String::from("uppercase"),
			Value::UpperLatin => String::from("upper-latin"),
			Value::UpperRoman => String::from("upper-roman"),
			Value::Upright => String::from("upright"),
			Value::Userspaceonuse => String::from("userspaceonuse"),
			Value::Verso => String::from("verso"),
			Value::VerticalLr => String::from("vertical-lr"),
			Value::VerticalRl => String::from("vertical-rl"),
			Value::VerticalText => String::from("vertical-text"),
			Value::Vh => String::from("vh"),
			Value::ViewBox => String::from("view-box"),
			Value::Vmax => String::from("vmax"),
			Value::Vmin => String::from("vmin"),
			Value::Vw => String::from("vw"),
			Value::Wait => String::from("wait"),
			Value::Words => String::from("words"),
			Value::Wrap => String::from("wrap"),
			Value::WrapReverse => String::from("wrap-reverse"),
			Value::WResize => String::from("w-resize"),
			Value::X => String::from("x"),
			Value::Xor => String::from("xor"),
			Value::Y => String::from("y"),
			Value::ZoomIn => String::from("zoom-in"),
			Value::ZoomOut => String::from("zoom-out"),
		}
	}
}

