name: CI
on:
  push:
    branches:
      - master
  pull_request:
env:
  RUST_BACKTRACE: 1
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
        override: true
        profile: minimal
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          toolchain: stable
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          toolchain: stable
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          toolchain: nightly
        - os: macos-latest
          target: x86_64-apple-darwin
          toolchain: stable
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          toolchain: stable
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.target }}
        override: true
        profile: minimal
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target=${{ matrix.target }}
  coverage:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: clean
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --no-fail-fast
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
        RUSTDOCFLAGS: '-Cpanic=abort' # Though we are not using rustdoc...
    - uses: actions-rs/grcov@v0.1
      id: coverage
    - uses: codecov/codecov-action@v1
      with:
        file: ${{ steps.coverage.outputs.report }}
        fail_ci_if_error: false
